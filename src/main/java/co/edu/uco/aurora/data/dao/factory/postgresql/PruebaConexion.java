package co.edu.uco.aurora.data.dao.factory.postgresql;

import co.edu.uco.aurora.crosscuting.exception.AuroraException;
import co.edu.uco.aurora.data.dao.factory.DAOFactory;
import co.edu.uco.aurora.data.dao.factory.postgresql.PostgresqlDAOFactory;

public class PruebaConexion {

    public static void main(String[] args) {
        DAOFactory factory = null;

        try {
            System.out.println("Intentando obtener conexi√≥n a trav√©s de la Factor√≠a...");

            // Esta l√≠nea es la clave: al crear la instancia, se ejecuta el constructor
            // y el constructor llama a openConnection().
            factory = new PostgresqlDAOFactory();

            // Si la l√≠nea anterior no lanz√≥ una excepci√≥n, la conexi√≥n fue exitosa.
            System.out.println("\n‚úÖ ¬°CONEXI√ìN EXITOSA a trav√©s de la Factor√≠a!");
            System.out.println("La clase PostgresqlDAOFactory funciona correctamente.");

        } catch (final AuroraException e) {
            System.out.println("\n‚ùå ¬°FALL√ì LA CONEXI√ìN a trav√©s de la Factor√≠a!");
            System.out.println("--- Causa del Error ---");
            e.printStackTrace();
            System.out.println("-----------------------");
            System.out.println("Revisa las credenciales dentro de tu clase PostgresqlDAOFactory.");

        } finally {
            // Nos aseguramos de cerrar la conexi√≥n si se logr√≥ abrir
            if (factory != null) {
                try {
                    factory.closeConnection();
                    System.out.println("üîå Conexi√≥n cerrada correctamente.");
                } catch (final AuroraException e) {
                    System.out.println("\n‚ùå Ocurri√≥ un error al intentar CERRAR la conexi√≥n.");
                    e.printStackTrace();
                }
            }
        }
    }
}